// <auto-generated />
using MVC_Core2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MVC_Core2.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    partial class ShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("MVC_Core2.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryName = "Soft"
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryName = "Hot"
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryName = "smoothie"
                        });
                });

            modelBuilder.Entity("MVC_Core2.Models.Drink", b =>
                {
                    b.Property<int>("DrinkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDrinkOfWeek")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("feedback")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DrinkID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Drinks");

                    b.HasData(
                        new
                        {
                            DrinkID = 1,
                            CategoryID = 1,
                            Description = "karak trea description",
                            ImageUrl = "Images/karak.jpeg",
                            InStock = true,
                            IsDrinkOfWeek = true,
                            Name = "Kara",
                            Price = 12.949999999999999
                        },
                        new
                        {
                            DrinkID = 2,
                            CategoryID = 1,
                            Description = "pepsi trea description",
                            ImageUrl = "Images/pepsi.jpg",
                            InStock = true,
                            IsDrinkOfWeek = true,
                            Name = "Pepsi",
                            Price = 12.949999999999999
                        },
                        new
                        {
                            DrinkID = 3,
                            CategoryID = 1,
                            Description = "Tea Description",
                            ImageUrl = "Images/tea.png",
                            InStock = true,
                            IsDrinkOfWeek = true,
                            Name = "Tea Soluimani",
                            Price = 12.949999999999999
                        });
                });

            modelBuilder.Entity("MVC_Core2.Models.Drink", b =>
                {
                    b.HasOne("MVC_Core2.Models.Category", "Category")
                        .WithMany("Drinks")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MVC_Core2.Models.Category", b =>
                {
                    b.Navigation("Drinks");
                });
#pragma warning restore 612, 618
        }
    }
}
